,,,; **** DEFINICION DE REGISTROS Y BITS UTILIZADOS ****
,,,status  equ     03
,,,ptoa    equ     05
,,,ptob    equ     06
,,,ptoc    equ     07
,,,ptod    equ     08
,,,ptoe    equ     09
,,,pclath  equ     0ah
,,,intcon  equ     0bh
,,,pir1    equ     0ch
,,,rcsta   equ     18h
,,,txreg   equ     19h
,,,trisa   equ     85h
,,,trisb   equ     86h
,,,trisc   equ     87h
,,,trisd   equ     88h
,,,trise   equ     89h
,,,txsta   equ     98h
,,,spbrg   equ     99h
,,,adresl  equ     9eh
,,,adresh  equ     1eh
,,,adcon1  equ     9fh
,,,adcon0  equ     1fh
,,,
,,,; Definición de bits utilizados
,,,rp0     equ     5
,,,go      equ     2
,,,z       equ     2
,,,c       equ     0
,,,w       equ     0
,,,
,,,; Pines del puerto D
,,,e               equ     1h              ;para habilitar el modulo LCD
,,,rs              equ     0h              ;para seleccionar datos o instruccion del LCD
,,,
,,,; Variables del usuario
,,,cont            equ     24h
,,,loops           equ     25h
,,,loops2          equ     26h
,,,buffer1         equ     29h
,,,shield          equ     30h
,,,uni             equ     31h
,,,dec             equ     32h
,,,cen             equ     33h
,,,T               equ     35h
,,,
,,,; **** Configuracion para el Proteus ****
,,,
,,,list p=16f877
,,,_CP_ALL                         EQU     H'0FCF'
,,,_CP_HALF                        EQU     H'1FDF'
,,,_CP_UPPER_256                   EQU     H'2FEF'
,,,_CP_OFF                         EQU     H'3FFF'
,,,_DEBUG_ON                       EQU     H'37FF'
,,,_DEBUG_OFF                      EQU     H'3FFF'
,,,_WRT_ENABLE_ON                  EQU     H'3FFF'
,,,_WRT_ENABLE_OFF                 EQU     H'3DFF'
,,,_CPD_ON                         EQU     H'3EFF'
,,,_CPD_OFF                        EQU     H'3FFF'
,,,_LVP_ON                         EQU     H'3FFF'
,,,_LVP_OFF                        EQU     H'3F7F'
,,,_BODEN_ON                       EQU     H'3FFF'
,,,_BODEN_OFF                      EQU     H'3FBF'
,,,_PWRTE_OFF                      EQU     H'3FFF'
,,,_PWRTE_ON                       EQU     H'3FF7'
,,,_WDT_ON                         EQU     H'3FFF'
,,,_WDT_OFF                        EQU     H'3FFB'
,,,_LP_OSC                         EQU     H'3FFC'
,,,_XT_OSC                         EQU     H'3FFD'
,,,_HS_OSC                         EQU     H'3FFE'
,,,_RC_OSC                         EQU     H'3FFF'
,,,
00002007,3FF1,,__CONFIG _CP_OFF & _WDT_OFF & _XT_OSC & _PWRTE_ON
,,,
,,,
,,,; ***** EMPIEZA EL PROGRAMA *****
,,,
,,,        org     00
00000000,287C,,        goto    inicio
,,,
00000001,00A5,retarms,retarms movwf   loops           ;rutina de retardo en milisegundos
00000002,306E,otro2,otro2   movlw   d'110'          ;el numero de milisegundos llega
00000003,00A6,,        movwf   loops2          ;cargado en el registro loops
,,,
00000004,0000,otro,otro    nop
00000005,0000,,        nop
00000006,0000,,        nop
00000007,0000,,        nop
00000008,0000,,        nop
00000009,0000,,        nop
0000000A,0BA6,,        decfsz  loops2,1        ;pregunta si termino 1 ms
0000000B,2804,,        goto    otro
0000000C,0BA5,,        decfsz  loops,1         ;pregunta si termina el retardo
0000000D,2802,,        goto    otro2
0000000E,0008,,        return
,,,
,,,                                ;Rutina de conversion A/D a 8 bits guardando 2 datos en binario en en lo
,,,
0000000F,0000,conver,conver  nop
00000010,0000,,        nop
00000011,0000,,        nop                     ;estas instrucciones nop dan al micro el tiempo de adquisicion requerido
00000012,0000,,        nop
00000013,0000,,        nop
00000014,0000,,        nop
00000015,0000,,        nop
00000016,0000,,        nop
00000017,151F,,        bsf     adcon0,go
00000018,0000,,        nop
00000019,0000,,        nop
0000001A,191F,consu,consu   btfsc   adcon0,go
0000001B,281A,,        goto    consu
,,,
0000001C,1683,,        bsf     status,rp0
0000001D,081E,,        movf    adresl,w
,,,
0000001E,1283,,        bcf     status,rp0      ;pasar banco0
,,,
0000001F,00A9,,        movwf   buffer1
00000020,1003,,        bcf     status,c
00000021,0C29,,        rrf     buffer1,w
00000022,00B5,,        movwf   T
00000023,00A9,,        movwf   buffer1
00000024,0008,,        return
,,,
00000025,3005,retalcd,retalcd         movlw   05h             ;Un retardo de unos 20 us para darle tiempo a la LCD
00000026,00C3,,                movwf   43h
00000027,0BC3,decre,decre           decfsz  43h,1
00000028,2827,,                goto    decre
00000029,0008,,                return
,,,
,,,                                        ;Rutina llena que la pantalla de espacios en blanco
0000002A,01CC,limpia,limpia          clrf    4ch
,,,
,,,
0000002B,3020,limpi,limpi           movlw   " "             ;el espacio es un caracter en blanco
0000002C,203A,,                call    dato
,,,
,,,
,,,
,,,
0000002D,0ACC,,                incf    4ch,1
0000002E,3050,,                movlw   50h             ;se incrementa hasta la posicion 50h para borrar todo
0000002F,064C,,                xorwf   4ch,0
00000030,1D03,,                btfss   status,z
,,,
,,,
,,,
,,,
00000031,282B,,                goto    limpi
00000032,0008,,                return
,,,
,,,                                        ;**Las sgtes rutinas envian instrucciones o datos al LCD**
00000033,0088,control,control         movwf   ptod
00000034,1007,,                bcf     ptoc,rs
00000035,1487,,                bsf     ptoc,e
00000036,2025,,                call    retalcd
00000037,1087,,                bcf     ptoc,e
00000038,2025,,                call    retalcd
00000039,0008,,                return
,,,
,,,
0000003A,0088,dato,dato            movwf   ptod
0000003B,1407,,                bsf     ptoc,rs
0000003C,1487,,                bsf     ptoc,e
0000003D,2025,,                call    retalcd
0000003E,1087,,                bcf     ptoc,e
0000003F,2025,,                call    retalcd
00000040,0008,,                return
,,,
,,,
00000041,00A4,suma,suma    movwf   cont
,,,
00000042,03A4,XX2,XX2     decf    cont,1
00000043,0824,,        movf    cont,w
00000044,3AFF,,        xorlw   d'255'
00000045,1903,,        btfsc   status,z
00000046,0008,,        return
00000047,0AB1,,        incf    uni,1
00000048,0831,,        movf    uni,0
00000049,3A0A,,        xorlw   d'10'
0000004A,1D03,,        btfss   status,z
0000004B,2842,,        goto    XX2
0000004C,01B1,,        clrf    uni
0000004D,0AB2,,        incf    dec,1
0000004E,0832,,        movf    dec,0
0000004F,3A0A,,        xorlw   d'10'
00000050,1D03,,        btfss   status,z
00000051,2842,,        goto    XX2
00000052,01B2,,        clrf    dec
00000053,0AB3,,        incf    cen,1
00000054,2842,,        goto    XX2
,,,
00000055,00B0,cbd,cbd     movwf   shield
00000056,01B1,,        clrf    uni
00000057,01B2,,        clrf    dec
00000058,01B3,,        clrf    cen
,,,
00000059,3040,,        movlw   d'64'
0000005A,1B30,,        btfsc   shield,6
0000005B,2041,,        call    suma
0000005C,3020,,        movlw   d'32'
0000005D,1AB0,,        btfsc   shield,5
0000005E,2041,,        call    suma
0000005F,3010,,        movlw   d'16'
00000060,1A30,,        btfsc   shield,4
00000061,2041,,        call    suma
00000062,3008,,        movlw   d'8'
00000063,19B0,,        btfsc   shield,3
00000064,2041,,        call    suma
00000065,3004,,        movlw   d'4'
00000066,1930,,        btfsc   shield,2
00000067,2041,,        call    suma
00000068,3002,,        movlw   d'2'
00000069,18B0,,        btfsc   shield,1
0000006A,2041,,        call    suma
0000006B,3001,,        movlw   d'1'
0000006C,1830,,        btfsc   shield,0
0000006D,2041,,        call    suma
,,,
0000006E,3030,,        movlw   h'30'
0000006F,07B3,,        addwf   cen,1
00000070,3030,,        movlw   h'30'
00000071,07B2,,        addwf   dec,1
00000072,3030,,        movlw   h'30'
00000073,07B1,,        addwf   uni,1
00000074,0008,,        return
,,,
00000075,0833,,        movf    cen,0
00000076,203A,,        call    dato
00000077,0832,,        movf    dec,0
00000078,203A,,        call    dato
00000079,0831,,        movf    uni,0
0000007A,203A,,        call    dato
0000007B,0008,,        return
,,,
,,,;************ PROGRAMA PRINCIPAL ************
,,,
0000007C,0183,inicio,inicio  clrf    status
0000007D,1683,,        bsf     status,rp0
0000007E,307F,,        movlw   b'1111111'
0000007F,0085,,        movwf   trisa
00000080,30FF,,        movlw   b'11111111'
00000081,0086,,        movwf   trisb
00000082,30FC,,        movlw   b'11111100'
00000083,0087,,        movwf   trisc
00000084,3000,,        movlw   b'00000000'
00000085,0088,,        movwf   trisd
00000086,30AC,,        movlw   d'11101100'
00000087,0089,,        movwf   trise
00000088,308E,,        movlw   b'10001110'
00000089,009F,,        movwf   adcon1
0000008A,1283,,        bcf     status,5
,,,
0000008B,3064,,        movlw   d'100'
0000008C,2001,,        call    retarms
,,,
0000008D,3038,begin,begin   movlw   b'00111000'
0000008E,2033,,        call    control
0000008F,300C,,        movlw   b'00001100'
00000090,2033,,        call    control
00000091,3006,,        movlw   b'00000110'
00000092,2033,,        call    control
00000093,3080,,        movlw   b'10000000'
00000094,2033,,        call    control
,,,
00000095,202A,blank,blank   call    limpia
,,,
00000096,3081,,        movlw   b'10000001'     ;PRIMER CANAL
00000097,009F,,        movwf   adcon0
,,,
00000098,200F,,        call    conver          ;hacer la conversion A/D
,,,
,,,
,,,
00000099,3080,,_       movlw   b'10000000'             ;ubica puntero en linea superior
0000009A,2033,,        call    control                 ;primera posicion
,,,
0000009B,3054,,        movlw   "T"
0000009C,203A,,        call    dato
0000009D,3045,,        movlw   "E"
0000009E,203A,,        call    dato
0000009F,304D,,        movlw   "M"
000000A0,203A,,        call    dato
000000A1,3050,,        movlw   "P"
000000A2,203A,,        call    dato
000000A3,3045,,        movlw   "E"
000000A4,203A,,        call    dato
000000A5,3058,,        movlw   "X"
000000A6,203A,,        call    dato
000000A7,3054,,        movlw   "T"
000000A8,203A,,        call    dato
,,,
,,,
000000A9,2055,,        call    cbd
,,,
,,,
,,,
,,,
000000AA,3089,,        movlw   b'10001001'     ;selecciona canal 1 y reloj de conv
000000AB,009F,,        movwf   adcon0
,,,
000000AC,200F,,        call    conver
,,,
000000AD,30C0,,        movlw   b'11000000'
000000AE,2033,,        call    control
,,,
000000AF,3054,,        movlw   "T"
000000B0,203A,,        call    dato
000000B1,3045,,        movlw   "E"
000000B2,203A,,        call    dato
000000B3,304D,,        movlw   "M"
000000B4,203A,,        call    dato
000000B5,3050,,        movlw   "P"
000000B6,203A,,        call    dato
000000B7,3049,,        movlw   "I"
000000B8,203A,,        call    dato
000000B9,304E,,        movlw   "N"
000000BA,203A,,        call    dato
000000BB,3054,,        movlw   "T"
000000BC,203A,,        call    dato
,,,
000000BD,2055,,        call    cbd
,,,
,,,
,,,
000000BE,3041,,        movlw   b'01000001'
000000BF,009F,,        movwf   adcon0
000000C0,200F,,        call    conver
,,,
000000C1,0835,,        movf    T,w
000000C2,2055,,        call    cbd
000000C3,3087,,        movlw   b'10000111'
000000C4,2033,,        call    control
000000C5,0833,,        movf    cen,w
000000C6,203A,,        call    dato
000000C7,0832,,        movf    dec,w
000000C8,203A,,        call    dato
000000C9,0831,,        movf    uni,w
000000CA,203A,,        call    dato
,,,
000000CB,3089,,        movlw   b'10001001'
000000CC,009F,,        movwf   adcon0
000000CD,200F,,        call    conver
,,,                                ;Envia serialmente los datos
,,,                                ;obtenidos en la conversio
,,,
000000CE,0835,,        movf    T,w
000000CF,2055,,        call    cbd
000000D0,30C7,,        movlw   b'11000111'
000000D1,2033,,        call    control
000000D2,0833,,        movf    cen,w
000000D3,203A,,        call    dato
000000D4,0832,,        movf    dec,w
000000D5,203A,,        call    dato
000000D6,0831,,        movf    uni,w
000000D7,203A,,        call    dato
,,,
,,,
000000D8,3084,,        movlw   b'10000100'
000000D9,2033,,        call    control
,,,
000000DA,2899,,        goto    _
,,,                                ;realizar nuevamente la convercion de datos
,,,        end
