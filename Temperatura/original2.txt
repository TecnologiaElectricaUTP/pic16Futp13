; **** DEFINICION DE REGISTROS Y BITS UTILIZADOS ****
status 	equ 	03
ptoa 	equ 	05
ptob 	equ 	06
ptoc 	equ 	07
ptod	equ	08
ptoe	equ	09
pclath 	equ 	0ah
intcon 	equ 	0bh
pir1	equ	0ch
rcsta	equ	18h
txreg	equ	19h
trisa	equ	85h
trisb	equ	86h
trisc	equ	87h
trisd	equ	88h
trise	equ	89h
txsta	equ	98h
spbrg	equ	99h
adresl	equ	9eh
adresh	equ	1eh
adcon1	equ	9fh
adcon0	equ	1fh

; Definición de bits utilizados
rp0 	equ 	5
go	equ	2
z	equ 	2
c	equ 	0
w	equ 	0

; Pines del puerto D
e       	equ 	1h      	;para habilitar el modulo LCD
rs      	equ 	0h      	;para seleccionar datos o instruccion del LCD

; Variables del usuario
cont		equ	24h
loops		equ	25h
loops2		equ	26h
buffer1 	equ	29h
shield	 	equ	30h
uni		equ	31h		
dec	 	equ	32h
cen		equ	33h
T		equ	35h		

; **** Configuracion para el Proteus ****

list p=16f877
_CP_ALL                      	EQU     H'0FCF'
_CP_HALF                     	EQU     H'1FDF'
_CP_UPPER_256                	EQU     H'2FEF'
_CP_OFF                      	EQU     H'3FFF'
_DEBUG_ON			EQU     H'37FF'
_DEBUG_OFF                   	EQU     H'3FFF'
_WRT_ENABLE_ON               	EQU     H'3FFF'
_WRT_ENABLE_OFF              	EQU     H'3DFF'
_CPD_ON                      	EQU     H'3EFF'
_CPD_OFF                     	EQU     H'3FFF'
_LVP_ON                      	EQU     H'3FFF' 
_LVP_OFF                     	EQU     H'3F7F'	
_BODEN_ON                    	EQU     H'3FFF'
_BODEN_OFF                   	EQU     H'3FBF'
_PWRTE_OFF                   	EQU     H'3FFF'
_PWRTE_ON                    	EQU     H'3FF7'
_WDT_ON                      	EQU     H'3FFF'
_WDT_OFF                     	EQU     H'3FFB'
_LP_OSC                      	EQU     H'3FFC'
_XT_OSC                      	EQU     H'3FFD'
_HS_OSC                      	EQU     H'3FFE'
_RC_OSC                      	EQU     H'3FFF'

__CONFIG _CP_OFF & _WDT_OFF & _XT_OSC & _PWRTE_ON 


; ***** EMPIEZA EL PROGRAMA *****

	org	00
	goto	inicio

retarms	movwf	loops		;rutina de retardo en milisegundos
otro2	movlw	d'110'		;el numero de milisegundos llega
	movwf	loops2		;cargado en el registro loops
	
otro	nop
	nop
	nop	
	nop
	nop
	nop
	decfsz	loops2,1	;pregunta si termino 1 ms
	goto	otro
	decfsz	loops,1		;pregunta si termina el retardo
	goto	otro2
	return

				;Rutina de conversion A/D a 8 bits guardando 2 datos en binario en en los registros buffer y buffer1				
				
conver  nop
	nop	
	nop			;estas instrucciones nop dan al micro el tiempo de adquisicion requerido. En este caso de 7 us
	nop			
	nop			
	nop
	nop
	nop
	bsf	adcon0,go 	
	nop
	nop
consu	btfsc	adcon0,go	
	goto	consu

	bsf	status,rp0	
	movf	adresl,w	
	
	bcf	status,rp0	;pasar banco0
	
	movwf	buffer1		
	bcf	status,c
	rrf	buffer1,w 
	movwf	T		
	movwf	buffer1	
	return

retalcd 	movlw   05h		;Un retardo de unos 20 us para darle tiempo a la LCD
        	movwf   43h		
decre   	decfsz  43h,1
        	goto    decre
        	return

					;Rutina llena que la pantalla de espacios en blanco
limpia  	clrf    4ch
		
		
limpi   	movlw   " "		;el espacio es un caracter en blanco
        	call	dato

		

	
        	incf    4ch,1
        	movlw   50h		;se incrementa hasta la posicion 50h para borrar todo
        	xorwf   4ch,0
		btfss   status,z
        



		goto    limpi
        	return

					;**Las sgtes rutinas envian instrucciones o datos al LCD**
control 	movwf   ptod
		bcf     ptoc,rs		
        	bsf     ptoc,e                     
        	call    retalcd
       	 	bcf     ptoc,e          
        	call    retalcd
        	return


dato		movwf   ptod 
		bsf     ptoc,rs        
        	bsf     ptoc,e
        	call    retalcd
       	 	bcf     ptoc,e          
        	call    retalcd
        	return


suma	movwf	cont		
				
XX2	decf	cont,1
	movf	cont,w
	xorlw	d'255'
	btfsc	status,z	
	return			
	incf	uni,1	
	movf	uni,0
	xorlw	d'10'
	btfss	status,z
	goto	XX2
	clrf	uni
	incf	dec,1
	movf	dec,0
	xorlw	d'10'
	btfss	status,z
	goto	XX2
	clrf	dec	
	incf	cen,1
	goto	XX2
				
cbd	movwf	shield		
	clrf	uni				
	clrf	dec		
	clrf	cen		

	movlw	d'64'
	btfsc	shield,6	
	call	suma		
	movlw	d'32'
	btfsc	shield,5	
	call	suma		
	movlw	d'16'
	btfsc	shield,4	
	call	suma		
	movlw	d'8'
	btfsc	shield,3	
	call	suma		
	movlw	d'4'
	btfsc	shield,2	
	call	suma		
	movlw	d'2'
	btfsc	shield,1	
	call	suma		
	movlw	d'1'
	btfsc	shield,0	
	call	suma		

	movlw	h'30'		
	addwf	cen,1		
	movlw	h'30'		
	addwf	dec,1		
	movlw	h'30'		
	addwf	uni,1		
	return

	movf	cen,0
	call	dato
	movf	dec,0
	call	dato
	movf	uni,0
	call	dato
	return

;************ PROGRAMA PRINCIPAL ************

inicio	clrf	status
	bsf	status,rp0	
	movlw	b'1111111'
	movwf	trisa
	movlw	b'11111111'
	movwf	trisb
	movlw	b'11111100'
	movwf	trisc
	movlw	b'00000000'
	movwf	trisd
	movlw	d'11101100'
	movwf	trise	
	movlw	b'10001110'	
	movwf	adcon1
	bcf	status,5	

	movlw	d'100'		
	call	retarms

begin	movlw   b'00111000'   	
        call    control
        movlw   b'00001100'   	
        call    control
        movlw   b'00000110'   	
        call    control
	movlw	b'10000000'	
	call	control		

blank	call   	limpia        

	movlw	b'10000001'  	;PRIMER CANAL
	movwf	adcon0
	
	call 	conver		;hacer la conversion A/D

	

_	movlw	b'10000000'		;ubica puntero en linea superior
	call	control			;primera posicion

	movlw	"T"
	call	dato
	movlw	"E"
	call	dato
	movlw	"M"
	call	dato
	movlw	"P"
	call	dato
        movlw	"E"
	call	dato 
	movlw	"X"
	call	dato
        movlw	"T"
	call	dato
	

	call	cbd

	
        	

	movlw 	b'10001001' 	;selecciona canal 1 y reloj de conv
	movwf 	adcon0 
	
	call 	conver

	movlw	b'11000000'
	call	control 

	movlw	"T"
	call	dato
	movlw	"E"
	call	dato
	movlw	"M"
	call	dato
	movlw	"P"
	call	dato
        movlw	"I"
	call	dato
	movlw	"N"
	call	dato
        movlw	"T"
	call	dato
	
	call	cbd
 	
        	

	movlw	b'01000001'	
	movwf	adcon0		
	call 	conver		
	
	movf	T,w		
	call	cbd		
	movlw	b'10000111'	
	call	control		
	movf	cen,w		
	call	dato
	movf	dec,w		
	call	dato
	movf	uni,w		
	call	dato

	movlw 	b'10001001'	
	movwf	adcon0		
	call 	conver	
				;Envia serialmente los datos
				;obtenidos en la conversio
	
	movf	T,w		
	call	cbd		
	movlw	b'11000111'	
	call	control		
	movf	cen,w		
	call	dato
	movf	dec,w		
	call	dato
	movf	uni,w		
	call	dato

	
	movlw	b'10000100'	
	call	control			
	
	goto 	_		
				;realizar nuevamente la convercion de datos
	end
