,,,;Contador de 4 digitos 0000 a 9999 en displays con PIC877
,,,; ******** DEFINICION DE REGISTROS UTILIZADOS
,,,
,,,pcl     equ     02h
,,,status  equ     03
,,,STATUS  equ     03
,,,ptoa    equ     05
,,,ptob    equ     06
,,,ptoc    equ     07
,,,ptod    equ     08
,,,ptoe    equ     09
,,,pclath  equ     0ah
,,,intcon  equ     0bh
,,,pir1    equ     0ch
,,,rcsta   equ     18h
,,,txreg   equ     19h
,,,rcreg   equ     1ah
,,,adresh  equ     1eh
,,,adcon0  equ     1fh
,,,trisa   equ     85h
,,,trisb   equ     86h
,,,trisc   equ     87h
,,,trisd   equ     88h
,,,trise   equ     89h
,,,txsta   equ     98h
,,,spbrg   equ     99h
,,,adresl  equ     9eh
,,,adcon1  equ     9fh
,,,;Definicion de bits utilizados
,,,rp0     equ     5
,,,rp1     equ     6
,,,irp     equ     7
,,,z       equ     2
,,,c       equ     0
,,,C       equ 0
,,,txif    equ     4
,,,go      equ     2
,,,;Variables del usuario
,,,loops   equ     30h
,,,loops2  equ     31h
,,,loops3  equ     36h
,,,comp    equ 22h
,,,Unidad  equ 20h                         ;Para almacenar unidades
,,,Decena  equ 21h                         ;Para almacenar decenas
,,,
,,,
,,,; ************  Configuracion para el simulador Proteus
,,,list p=16f877
,,,
,,,_CP_ALL                         EQU     H'0FCF'
,,,_CP_HALF                        EQU     H'1FDF'
,,,_CP_UPPER_256                   EQU     H'2FEF'
,,,_CP_OFF                         EQU     H'3FFF'
,,,_DEBUG_ON                               EQU     H'37FF'
,,,_DEBUG_OFF                      EQU     H'3FFF'
,,,_WRT_ENABLE_ON                  EQU     H'3FFF'
,,,_WRT_ENABLE_OFF                 EQU     H'3DFF'
,,,_CPD_ON                         EQU     H'3EFF'
,,,_CPD_OFF                        EQU     H'3FFF'
,,,_LVP_ON                         EQU     H'3FFF'
,,,_LVP_OFF                        EQU     H'3F7F'
,,,_BODEN_ON                       EQU     H'3FFF'
,,,_BODEN_OFF                      EQU     H'3FBF'
,,,_PWRTE_OFF                      EQU     H'3FFF'
,,,_PWRTE_ON                       EQU     H'3FF7'
,,,_WDT_ON                         EQU     H'3FFF'
,,,_WDT_OFF                        EQU     H'3FFB'
,,,_LP_OSC                         EQU     H'3FFC'
,,,_XT_OSC                         EQU     H'3FFD'
,,,_HS_OSC                         EQU     H'3FFE'
,,,_RC_OSC                         EQU     H'3FFF'
00002007,3FF1,,__CONFIG _CP_OFF & _WDT_OFF & _XT_OSC & _PWRTE_ON
,,,;:::::::::::::::::INICIO :::::::::::::::::
00000000,,,                org             0x00        ;begin in 0 address ram!
00000000,2855,,                goto            inicio  ;main
,,,;:::::::::::::::::::::::::::::::::::::::::::
,,,;-----------RETARDO MILISEGUNDOS-----------------
00000001,,retarms,retarms
00000001,00B0,,            movwf               loops           ;retardo de milisegundos cargado desde afuera
00000002,,otro2,otro2
00000002,306E,,            movlw               d'110'
00000003,00B1,,                    movwf               loops2
00000004,0000,otro,otro    nop
00000005,0000,,                nop
00000006,0000,,                nop
00000007,0000,,                nop
00000008,0000,,                nop
00000009,0000,,                nop
0000000A,0BB1,,                decfsz          loops2,1
0000000B,2804,,                goto            otro
0000000C,0BB0,,                decfsz          loops,1
0000000D,2802,,                goto            otro2
0000000E,0008,,                return
,,,
,,,;#############TABLA ################################
0000000F,0782,tabla,tabla   addwf   pcl,1           ; leds a encender en orden -gfedcba
00000010,343F,,                retlw   b'00111111'     ;0
00000011,3406,,                retlw   b'00000110'     ;1
00000012,345B,,                retlw   b'01011011'     ;2
00000013,344F,,                retlw   b'01001111'     ;3
00000014,3466,,                retlw   b'01100110'     ;4
00000015,346D,,                retlw   b'01101101'     ;5
00000016,347D,,                retlw   b'01111101'     ;6
00000017,3407,,                retlw   b'00000111'     ;7
00000018,347F,,                retlw   b'01111111'     ;8
00000019,346F,,                retlw   b'01101111'     ;9
,,,;########### DISPLAY ########################################
,,,;Originally taken from duque's sample.
0000001A,,display,display
,,,                                                                 ;rutina que carga cada dato en su respe
0000001A,0820,,                movf            Unidad,0         ;activando el transistor correspondiente en cada caso
0000001B,200F,,                call            tabla            ;Display derecho es representado por digito0
0000001C,0086,,                movwf           ptob
0000001D,1487,,                bsf                 ptoc,1              ;Activa el display derecho
0000001E,3005,,                movlw           d'5'            ;Retardo de 5 ms
0000001F,2001,,                call            retarms
00000020,1087,,                bcf                 ptoc,1              ;desactiva el display derecho
00000021,0821,,                movf            Decena,0
00000022,200F,,                call            tabla
00000023,0086,,                movwf           ptob            ;pone el dato de display izquierdo
00000024,1407,,                bsf                 ptoc,0              ;activa display izquierdo
00000025,3005,,                movlw           d'5'            ;Retardo de 5 ms
00000026,2001,,                call            retarms
00000027,1007,,                bcf                 ptoc,0              ;desactiva display izquierdo
00000028,0008,,                return
,,,;PUERTOS------------------
00000029,1303,ports,ports           bcf             status,6
0000002A,1683,,                bsf             status,5
0000002B,307F,,                movlw           b'1111111'
0000002C,0085,,                movwf           trisa
0000002D,3080,,                movlw           b'10000000'
0000002E,0086,,                movwf           trisb
0000002F,30FC,,                movlw           b'11111100'
00000030,0087,,                movwf           trisc
00000031,30F0,,                movlw           b'11110000'
00000032,0088,,                movwf           trisd
00000033,30EE,,                movlw           b'11101110'
00000034,0089,,                movwf           trise               ;puerto E entradas
00000035,3001,,                movlw           b'00000001'         ;selecciono Vref internos (+5 y GND) y 5 canales del
,,,                                                            ; 0001 A A A A VREF+ A A A RA3 VSS 7/1 RA0 c
00000036,009F,,                movwf           adcon1
00000037,1283,,                bcf                     status,rp0          ;pasar al banco 0
00000038,3081,,                movlw           b'10000001'         ;selecciona canal RA0, reloj de conv. fosc/32
,,,                                        ;Adcon0         b'10'           Fosc/32
,,,                                        ;                       b'--000'        ;Channel RA0 for usage !
,,,                                        ;                       b'-----0 o 1' ;CAD is doing the homework
,,,                                        ;                       b'------        ' ;Operative or not
00000039,009F,,                movwf           adcon0          ;Turn on the converter(CAD)
0000003A,0008,,                return
,,,;:::::::::Convertion :::::::::::
,,,;Originally taken from duque's sample.
,,,;La rutina de conversion solo encarga de la adquision de los datos,guardado de datos
,,,;en variables conocidas como BIN,luego retorna
0000003B,,conver,conver
0000003B,0000,,        nop
0000003C,0000,,        nop                         ;estas instrucciones nop sirven para
0000003D,0000,,        nop                         ;darle al micro el tiempo de adquisicion
0000003E,0000,,        nop                         ;requerido. En este caso es de 7 us aprox.
0000003F,0000,,        nop
00000040,0000,,        nop
00000041,0000,,        nop
00000042,0000,,        nop
00000043,151F,,        bsf     adcon0,go       ;inicia conversion
00000044,0000,,        nop
00000045,0000,,        nop
00000046,,consu,consu
00000046,191F,,        btfsc   adcon0,go       ;espera que termine de convertir el dato
00000047,2846,,        goto    consu
00000048,081E,,        movf    adresh,0        ;guarda resultado en BIN !
00000049,00A0,,        movwf   Unidad
0000004A,0008,,        return
,,,;---------Converter Binary Code to  BCD-------
,,,;Taken from www.utp.edu.co/~eduque/sistemasdigitales2
,,,;Modified by students group :Gallego,Velez,Jimenez,Salazar.
,,,
,,,;=============== CONVIERTE UN NUMERO BINARIO A BCD ===========
,,,; La rutina sólo requiere que se coloque el valor
,,,; a convertir en un registro, denominado aquí Unidad.
,,,; Ella retorna las decenas y las centenas (dígitos
,,,; decimales) en un par de registros adicionales.
,,,
0000004B,,Bin_BCD,Bin_BCD
0000004B,01A1,,                clrf    Decena          ;Limpiar decenas
0000004C,300A,,                movlw   d'10'           ;Cargar a W con decimal
0000004D,,Repite,Repite
0000004D,02A0,,                subwf    Unidad         ;Restarle al valor digital 10
0000004E,1C03,,                btfss   status,0        ;Verificar estado del carry
0000004F,2852,,                goto    SUM1                    ;Si cero, dejar de restar 10
00000050,0AA1,,                incf    Decena          ;Si uno, incrementa decenas
00000051,284D,,                goto    Repite          ;y repite la resta de 10
00000052,07A0,SUM1,SUM1    addwf   Unidad          ;Sumarle 10 al valor digital
00000053,3400,,                RETLW 0                         ;Regresa con 0
00000054,0008,return,return
,,,
,,,;*************** Main ASM *****************************
00000055,,inicio,inicio
00000055,2029,,                call        ports           ;configure the right ports and trisx's
00000056,0186,,                clrf            ptob                    ;Clean port B and C for {RB0:RB7 == 0 ,RC0:RC7 =
00000057,0187,,                clrf            ptoc
00000058,0188,,                clrf            ptod                ;clean port d
,,,
,,,
00000059,203B,a,a               call            conver              ;Call converter subrutine CAD
0000005A,0000,,        nop
0000005B,204B,,                call Bin_BCD
0000005C,201A,,                call            display             ;refresh display
,,,;Según sean los valores de W y el registro DATO, si aplicamos
,,,;SUBWF DATO
,,,;obtendremos diferentes resultados en el bit CARRY.
,,,;Si DATO = 3 y W = 2; el resultado será DATO = 1 y C = 1.
,,,;Si DATO = 2 y W = 2; el resultado será DATO = 0 y C = 1.
,,,;Si DATO = 1 y W = 2; el resultado será DATO = FFH y C = 0.
,,,;Vemos que C = 1 porque el resultado es positivo y C = 0 cuando el
,,,;resultado es negativo.
0000005D,301F,,        movlw d'31'
0000005E,0220,,        subwf   Unidad,0
0000005F,1C03,,        btfss   status,c
00000060,2864,,        goto    Unidad_ES_MENOR_AL_T
00000061,1D03,,        btfss   status,z
00000062,2867,,        goto    Unidad_ES_MAYOR_AL_T
,,,
00000063,2855,,        goto    inicio
00000064,,Unidad_ES_MENOR_AL_T,Unidad_ES_MENOR_AL_T
00000064,1008,,                bcf     ptod,0          ;motor apagado
00000065,1488,,                bsf ptod,1              ;led rojo encendido
00000066,2859,,                goto a
,,,
00000067,,Unidad_ES_MAYOR_AL_T,Unidad_ES_MAYOR_AL_T
00000067,1408,,                bsf ptod,0              ;enciende motor
00000068,1508,,                bsf ptod,2              ;enciende led verde
00000069,2859,,                goto    a
0000006A,2855,,                goto            inicio                  ;puede ser a ciclo 1
,,,                end
